{"pageProps":{"post":{"title":"Github","slug":"github","content":"<h1>Github CLI Commands</h1>\n<ul>\n<li>Install Github CLI <code>$ brew install gh</code></li>\n<li><a href=\"https://cli.github.com/manual/\">Github CLI Docs</a>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ gh auth login\n\n<span class=\"token comment\"># Gist</span>\n$ gh gist create --public hello.js\n\n<span class=\"token comment\"># Repo</span>\n$ <span class=\"token function\">git</span> init my-project\n$ <span class=\"token builtin class-name\">cd</span> my-project\n$ gh repo create\n\n<span class=\"token comment\"># Create a repository with a specific name</span>\n$ gh repo create my-project\n\n<span class=\"token comment\"># Create a repository in an organization</span>\n$ gh repo create cli/my-project\n</code></pre></div>\n</li>\n</ul>\n<h1>Git Commands</h1>\n<ul>\n<li>\n<p>Create</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Clone a repo</span>\n$ <span class=\"token function\">git</span> clone git@github.com:mapbox/mapbox-gl-js.git\n\n<span class=\"token comment\"># Create a new repo</span>\n$ <span class=\"token function\">git</span> init\n\n<span class=\"token comment\"># Create remote repo</span>\n$ gh repo create cli/my-project\n</code></pre></div>\n</li>\n<li>\n<p>Local changes</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> status\n$ <span class=\"token function\">git</span> <span class=\"token function\">diff</span>\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span>\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> -p <span class=\"token operator\">&#x3C;</span>file<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">'some message'</span>\n\n<span class=\"token comment\"># Change the last commit (don't amend published commits)</span>\n$ <span class=\"token function\">git</span> commit -amend -m <span class=\"token string\">'replace last commit message'</span>\n\n<span class=\"token comment\"># Change the last commit with stage items</span>\n$ <span class=\"token function\">git</span> commit -amend -m <span class=\"token string\">'staged files will be added to the last commit'</span>\n</code></pre></div>\n</li>\n<li>\n<p>Commit history</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> log\n$ <span class=\"token function\">git</span> log -p <span class=\"token operator\">&#x3C;</span>file<span class=\"token operator\">></span>\n<span class=\"token comment\"># *use `:q` to close the log*</span>\n</code></pre></div>\n</li>\n<li>\n<p>Branches</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># List all existing branches</span>\n$ <span class=\"token function\">git</span> branch -av\n\n$ <span class=\"token function\">git</span> checkout <span class=\"token operator\">&#x3C;</span>branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout -b <span class=\"token operator\">&#x3C;</span>new_branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout --track <span class=\"token operator\">&#x3C;</span>remote/branch<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># Delete branch</span>\n$ <span class=\"token function\">git</span> branch -d <span class=\"token operator\">&#x3C;</span>branch_to_delete<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>Tags</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> tag <span class=\"token operator\">&#x3C;</span>tag_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> push --tags\n</code></pre></div>\n</li>\n<li>\n<p>Update &#x26; publish</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> remote show origin\n$ <span class=\"token function\">git</span> fetch origin\n$ <span class=\"token function\">git</span> pull origin <span class=\"token operator\">&#x3C;</span>remote_branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> push origin <span class=\"token operator\">&#x3C;</span>branch_name<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> checkout --track origin/this-rocks\n\n<span class=\"token comment\"># Delete remote branch</span>\n$ <span class=\"token function\">git</span> branch -dr <span class=\"token operator\">&#x3C;</span>remote/branch<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p>Merge &#x26; Rebase</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Merge &#x3C;branch> into your current HEAD</span>\n$ <span class=\"token function\">git</span> merge <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># Rebase (don't rebase published commits</span>\n$ <span class=\"token function\">git</span> rebase <span class=\"token operator\">&#x3C;</span>branch<span class=\"token operator\">></span>\n\n\n$ <span class=\"token function\">git</span> rebase --abort\n$ <span class=\"token function\">git</span> rebase --continue\n$ <span class=\"token function\">git</span> merge\n</code></pre></div>\n</li>\n<li>\n<p>Undo</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"></code></pre></div>\n</li>\n</ul>\n<h1>Merging vs. Rebase</h1>\n<h1>Github</h1>\n<ul>\n<li>... add notes on what it is</li>\n</ul>\n<h2>Setting up multiple SSH keys</h2>\n<ul>\n<li>If you have 2+ Github accounts you will have to create a new SSH key for each account</li>\n</ul>\n<ol>\n<li>Create an SSH Key</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Create an rsa key</span>\n$ ssh-keygen -t rsa -C <span class=\"token string\">\"your@email.com\"</span>\n<span class=\"token comment\"># id_rsa_*</span>\n\n<span class=\"token comment\"># Add your SSH private key to the ssh-agent and store your passphrase in the keychain. </span>\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-add ~/.ssh/id_rsa_second-gh\n\n<span class=\"token comment\"># List all the registers keys</span>\n$ ssh-add -l\n</code></pre></div>\n<ol start=\"2\">\n<li>Update your <code>~/.ssh/config</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#first-gh account</span>\nHost github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa\n\n<span class=\"token comment\">#second-gh account</span>\nHost github.com-2\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa_second-gh\n</code></pre></div>\n<ol start=\"2\">\n<li>Add your public SSH key to github</li>\n</ol>\n<ul>\n<li>Click on your avatar in the top right of the page then click on \"SSH keys &#x26; GPG keys\" in the sidebar</li>\n<li>or click the <a href=\"https://github.com/settings/keys\">SSH keys &#x26; GPG keys link</a></li>\n<li>click the \"New\" button under the SSH Keys section</li>\n<li>copy your *.pub key and paste it</li>\n</ul>\n<ol start=\"3\">\n<li>Test your connections</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># test your connection</span>\n$ <span class=\"token function\">ssh</span> -T git@github.com\n<span class=\"token comment\"># Hi first-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n\n$ <span class=\"token function\">ssh</span> -T git@github.com-2\n<span class=\"token comment\"># Hi second-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Clone a repo</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Cloning from 1st account</span>\n$ git@github.com:first-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Cloning for 2nd account </span>\n$ git@github.com-2:second-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Update username/email</span>\n$ <span class=\"token function\">git</span> config user.name <span class=\"token string\">\"username\"</span>\n$ <span class=\"token function\">git</span> config user.email <span class=\"token string\">\"your@email.com\"</span> \n\n<span class=\"token comment\"># update the second remote origin</span>\n$ <span class=\"token function\">git</span> remote set-url origin git@github.com-2:username/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n</code></pre></div>\n<h2>Github Pages</h2>\n<ul>\n<li>You can build a static site and have it hosted on GitHub Pages with a few configurations to the codebase and the github repositoryâ€™s settings.</li>\n<li>This example expects that you are using npm for your development/deployment</li>\n</ul>\n<ol>\n<li>Create a new repo in Github</li>\n</ol>\n<ul>\n<li>Make sure that it's a <code>Public</code> repo</li>\n</ul>\n<ol start=\"2\">\n<li>Install the <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a> npm package</li>\n</ol>\n<ul>\n<li>Install gh-pages:\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm install gh-pages --save-dev</code></pre></div>\n</li>\n<li>Add a build/deploy script to your <code>package.json</code>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-build-script\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"predeploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf ./public\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &#x26;&#x26; gh-pages -d public\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>-d public</code> you're telling <code>gh-pages</code> where the build source code lives</li>\n<li>When you run npm run deploy all contents of the <code>public</code> folder will be moved to your repositoryâ€™s gh-pages branch.</li>\n<li><strong>note</strong>: <em>With npm scripts if you prefix the scripts key name with <code>pre</code> it will run before the command and <code>post</code> it will run after</em></li>\n</ul>\n<ol start=\"3\">\n<li>Update setting for GithubPages</li>\n</ol>\n<ul>\n<li>You must select which branch will be deployed from your repository settings in GitHub for GitHub Pages to function.</li>\n<li>The nice thing about the <code>gh-pages</code> npm package is that it will create a <code>gh-pages</code> branch and wire it up for you</li>\n<li>Navigate to your repo then click [<code>Settings</code> > Scroll down to the <code>GitHub Pages</code> Section]\n<img src=\"/assets/blog/gh-pages-screenshot.png\" alt=\"\"></li>\n<li>It's ok to keep the path as <code>/ (root)</code> because the when you run <code>gh-pages -d public</code> it take the contents of the <code>public</code> folder and saves it to the root of the <code>gh-pages</code> branch</li>\n</ul>\n<h2>Publishing to GitHub Pages</h2>\n<ul>\n<li>All you need to do to publish to githubpages is to run the npm <code>deploy</code> script\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm run deploy</code></pre></div>\n</li>\n<li>Your static page should live: https://<code>&#x3C;GITHUB_USERNAME></code>.github.io/<code>&#x3C;REPO_NAME></code>/.</li>\n<li><em>You might have to clear your cache to see the new changes</em></li>\n</ul>\n<h2>Publish with Github Actions</h2>\n<ol>\n<li>create a personal access token</li>\n</ol>\n<ul>\n<li>click the avatar > profile > <code>Developer setttings</code> > <code>Personal access token</code> or https://github.com/settings/tokens</li>\n<li>note: <code>&#x3C;repo_name> for github actions</code></li>\n<li>check the <code>repo</code> section</li>\n<li><strong>DON'T FORGET TO COPY THE TOKEN</strong></li>\n</ul>\n<ol start=\"2\">\n<li>In your repo settings paste the <code>ACCESS_TOKEN</code></li>\n</ol>\n<ul>\n<li></li>\n</ul>\n<h2>PR Templates</h2>\n<ul>\n<li>All you have to do is create a file <code>.github/pull_request_template.md</code>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\"># &#x26;lt;SOME TITLE&#x26;gt;\n\n## Summary\n\n\n## Notes\n\n\n## Figma Design\n[Figma Design](&#x26;lt;FIGMA_URL&#x26;gt;)\n\n\n## Screenshot\n\n\n## Jira Issue\n[CX-###](&#x26;lt;JIRA-TICKET-URL&#x26;gt;)\n\n\n## Tested\n\n</code></pre></div>\n</li>\n<li>Push it up to github</li>\n</ul>\n<h1>Github code owners</h1>\n<ul>\n<li>GitHub codeowners is implemented as a single file <code>.github/CODEOWNERS</code> in your repository</li>\n<li>Whenever a pull request is opened, GitHub will automatically check all changed files and check each codeowners rule, the owners are added as reviewers.</li>\n</ul>\n<h1>Updating a git commit message after it's been pushed</h1>\n<ul>\n<li>\n<p>When you commit somthing to git it's accompanied with a commit message that explains what changes were made</p>\n</li>\n<li>\n<p>If you need to update a message after it's been commited you can fix it with an <code>--amend</code> flag</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Changing the latest git commit message</span>\n$ <span class=\"token function\">git</span> commit --amend -m <span class=\"token string\">\"New message\"</span>\n\n<span class=\"token comment\"># Update the remote</span>\n$ <span class=\"token function\">git</span> push --force <span class=\"token operator\">&#x3C;</span>repository-name<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>branch-name<span class=\"token operator\">></span>\n\n<span class=\"token comment\"># </span>\n$ <span class=\"token function\">git</span> push --force-with-lease <span class=\"token operator\">&#x3C;</span>repository-name<span class=\"token operator\">></span> <span class=\"token operator\">&#x3C;</span>branch-name<span class=\"token operator\">></span>\n</code></pre></div>\n</li>\n<li>\n<p><em>Note that the <code>--force</code> is not recommended unless you are absolutely sure that no one else has cloned your repository after the latest commit. It's probably best to use <code>--force-with-lease</code> flag because it will abort if there was an upstream change to the repository.</em></p>\n</li>\n<li>\n<p>If you want to update a commit in a past commit you need the sha value</p>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># list the last three </span>\n</code></pre></div>\n<h1>Squash and merge</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> checkout master\n$ <span class=\"token function\">git</span> merge --squash bugfix\n$ <span class=\"token function\">git</span> commit\n</code></pre></div>\n","ogImage":{"url":"/assets/covers/github.jpg"},"coverImage":"/assets/covers/github.jpg"}},"__N_SSG":true}
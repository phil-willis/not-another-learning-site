{"pageProps":{"post":{"title":"node.js","slug":"node.js","content":"<h1>What is Nodejs</h1>\n<h1>Installation</h1>\n<ul>\n<li>There are a few ways to install Nodejs on your machine</li>\n<li>There are 2 main versions to consider <code>LTS</code> and <code>Current</code></li>\n<li><code>LTS</code> is for Long Term Support which is the stable version as for the <code>Current</code> is the more cutting edge</li>\n<li>Nodejs even versions are stable and odd versions for the lastest versions</li>\n<li>More about release dates and versions <a href=\"https://nodejs.org/en/about/releases/\">go here</a></li>\n</ul>\n<ol>\n<li>Install from the <a href=\"https://nodejs.org/en/\">nodejs</a> homepage</li>\n<li>HomeBrew on your mac</li>\n<li><a href=\"https://github.com/nvm-sh/nvm\">NVM</a> (My prefered way cause you can switch node versions easily)</li>\n</ol>\n<h2>Installing nodejs via Homepage</h2>\n<h2>Installing nodejs via HomeBrew</h2>\n<h2>Install nodejs with nvm</h2>\n<ul>\n<li>\n<p>Install via homebrew</p>\n<ul>\n<li><a href=\"http://dev.topheman.com/install-nvm-with-homebrew-to-use-multiple-versions-of-node-and-iojs-easily/\">tut</a></li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ brew <span class=\"token function\">install</span> nvm\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM installed via homebrew</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -s <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">.</span> <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/.nvm\"</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>brew --prefix nvm<span class=\"token variable\">)</span></span>/nvm.sh\n</code></pre></div>\n</li>\n<li>\n<p>Install via the <a href=\"https://github.com/nvm-sh/nvm\">ruby way</a></p>\n<ul>\n<li>Add this to your bash/zshrc:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.nvm\"</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span>  <span class=\"token comment\"># This loads nvm</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span>  <span class=\"token comment\"># This loads nvm bash_completion</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/opt/grep/libexec/gnubin:<span class=\"token environment constant\">$PATH</span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">undefined</code></pre></div>\n</li>\n<li>\n<p><em>note :</em> every time you switch node versions you'll have to install all your globals again as well as you will have to delete your projects <code>node_modules</code> because these dependencies are specfic to the exact node version &#x26; OS installed</p>\n</li>\n<li>\n<p>If your npm global packages point to a different nodejs version run this</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> list -g --depth<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n$ <span class=\"token function\">npm</span> config <span class=\"token function\">rm</span> prefix\n</code></pre></div>\n</li>\n<li>\n<p>NVM commands</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Check nodejs version</span>\n$ node -v <span class=\"token operator\">||</span> node --version\n\n<span class=\"token comment\"># List installed versions of node (via nvm)</span>\n$ nvm <span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># Install specific version of node</span>\n$ nvm <span class=\"token function\">install</span> <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Set default version of node</span>\n$ nvm <span class=\"token builtin class-name\">alias</span> default <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Switch version of node</span>\n$ nvm use <span class=\"token number\">14.15</span>.4\n\n<span class=\"token comment\"># List latest available versions</span>\n$ nvm ls-remote <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -i <span class=\"token string\">'latest'</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Node tools</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find out-of-day packages</span>\n$ npx npm-upgrade\n\n$ npx depcheck\n\n<span class=\"token comment\"># Find and delete `node_modules` on your machine</span>\n$ npx npkill\n</code></pre></div>\n<h1>Killing your local server that is going rogue</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find:</span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">lsof</span> -i :3000\n\n<span class=\"token comment\"># Kill:</span>\n$ <span class=\"token function\">kill</span> -9 <span class=\"token operator\">&#x3C;</span>PID<span class=\"token operator\">></span>\n</code></pre></div>\n<h1>Git hooks</h1>\n<ul>\n<li>\n<p>Automation is always good, especially when it reduces congnitive load and optimization</p>\n</li>\n<li>\n<p>We can automate things before we create commits or push changes to a repo</p>\n</li>\n<li>\n<p>The <code>.git</code> ditectory allows you to do native hooks if you want to or you can use something like husky to do all the heavy lifting for you and you can stay in JS land :)</p>\n</li>\n<li>\n<p>Check out the <a href=\"https://typicode.github.io/husky/#/\">Husky docs here</a></p>\n</li>\n<li>\n<p>Intall husky with:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npx husky-init <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> \n</code></pre></div>\n</li>\n<li>\n<p>This will automatically wireup all the git hooks and add a script <code>.husky/pre-commit</code> where you can add whatever command run before a commit</p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token function\">npm</span> run lint\n</code></pre></div>\n</li>\n<li>\n<p>It will setup husky, modify <code>package.json</code> and create a sample <code>pre-commit</code> hook that you can edit. - By default, it will run npm test when you commit.</p>\n</li>\n<li>\n<p>To add another hook use husky add.</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ npx husky <span class=\"token function\">add</span> .husky/pre-push <span class=\"token string\">'npm run lint &#x26;&#x26; npm run test:ci'</span>\n</code></pre></div>\n</li>\n<li>\n<p>This will create <code>.husky/pre-push</code></p>\n<div class=\"remark-highlight\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">.</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">dirname</span> <span class=\"token string\">\"<span class=\"token variable\">$0</span>\"</span><span class=\"token variable\">)</span></span>/_/husky.sh\"</span>\n\n<span class=\"token function\">npm</span> run lint <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token function\">npm</span> run test:ci\n</code></pre></div>\n</li>\n</ul>\n<h1>Creating a npm package</h1>\n<p>https://dev.to/joshaguilar/fully-automating-npm-package-releases-3k7ez</p>\n<ul>\n<li>sematic versioning\n<BREAKING>.<FEATURE>.<FIX>\n<MAJOR>.<MINOR>.<PATCH></li>\n</ul>\n<h2>For Every release</h2>\n<ol>\n<li>Run tests (if there are any)</li>\n<li>Update version in package.json according to Semver</li>\n<li>Create a git tag according to Semver\nMAJOR.MINOR.PATCH\n<code>$ git tag -a v#.#.# -m #.#.#</code></li>\n<li>Push the package to Github</li>\n<li>Push the package to npm</li>\n<li>Create release notes for every update</li>\n</ol>\n<h1>JS Doc</h1>\n<ul>\n<li>There are alot of ways to document your code; README, tutorials, documentation file, etc</li>\n<li>The problem with the one above is they get out of date quickly, it's best to put your documentaion as close to the code so that you can update it as you up update the functionality.</li>\n<li>JSDoc is perfect for this kinda documentation layer, plus if you are using vscode it will give you intellesence!</li>\n</ul>\n<ol>\n<li>Start with a code block</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Takes in to numbers and will add them</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n<ol start=\"2\">\n<li>Add a description of what it does</li>\n</ol>\n<ul>\n<li>The function name should give it away but it gives you a chance to descript it with words)\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**</span>\n<span class=\"token doc-comment comment\"> * Takes in to numbers and will add them</span>\n<span class=\"token doc-comment comment\"> */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n</li>\n<li><img src=\"plublic/assets/blog/jsdoc-description-only.jpg\" alt=\"jsdoc-description-only\"></li>\n</ul>\n<ol start=\"2\">\n<li>Now describe the params and the return</li>\n</ol>\n<ul>\n<li>Here is what the format looks like\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n*\n* <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>param <span class=\"token keyword\">type</span><span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">param</span> name - description\n*\n*/</span>\n</code></pre></div>\n</li>\n<li>Now let's add those\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n * Takes in to numbers and will add them\n *\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">item1</span> - First number\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">item2</span> - Second number\n * <span class=\"token keyword\">@returns</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> Sum of the 2 numbers\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addItems</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item1<span class=\"token punctuation\">,</span> item2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword control-flow\">return</span> item1 <span class=\"token operator\">+</span> item2\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> addItems\n</code></pre></div>\n</li>\n<li><img src=\"plublic/assets/blog/jsdoc-complete.jpg\" alt=\"jsdoc-complete\"></li>\n</ul>\n<ol start=\"3\">\n<li>Use the function</li>\n</ol>\n<ul>\n<li>\n<p>As you start to type in the parameter it will tell you the data type</p>\n</li>\n<li>\n<p><img src=\"plublic/assets/blog/jsdoc-using.jpg\" alt=\"jsdoc-using\"></p>\n</li>\n<li>\n<p>Example of JSDoc</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token doc-comment comment\">/**\n * Raises a number to exponent\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">value</span> - The base to raise\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">exponent</span> - The exponent\n * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">}</span></span> - The exponent power\n */</span>\n\n <span class=\"token doc-comment comment\">/**\n * A silly logger function\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>string<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">message</span>\n * <span class=\"token keyword\">@return</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">}</span></span> Nothing\n */</span>\n\n\n <span class=\"token doc-comment comment\">/**\n * Generates a table head\n * <span class=\"token keyword\">@author</span> Valentino Gagliardi &#x3C;valentinoDOTvalentinog.com>\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>HTMLTableElement<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">table</span> - The target HTML table\n * <span class=\"token keyword\">@param</span> <span class=\"token class-name\"><span class=\"token punctuation\">{</span>Array<span class=\"token punctuation\">}</span></span> <span class=\"token parameter\">data</span> - The array of cell header names\n */</span>\n</code></pre></div>\n</li>\n<li>\n<p>Generate docs</p>\n<ul>\n<li>You can use the <code>jsdoc</code> to generate documentation for all your functions</li>\n<li><em>Note</em> if you use <code>export default function yourFunctionName()</code> it won't create it you have to define it with just <code>function yourFunctionName()</code> then export it on another line <code>export default yourFunctionName</code></li>\n<li>Add the <code>jsdoc</code> package to your repo\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">mkdir</span> docs\n$ <span class=\"token function\">npm</span> i -D jsdoc\n</code></pre></div>\n</li>\n<li>update your <code>package.json</code> file\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"make:docs\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"jsdoc -d documentation src/*.js \"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre></div>\n</li>\n<li>now run the doc generator\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run make:docs\n$ <span class=\"token builtin class-name\">cd</span> documentation\n$ npx live-server\n</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n","ogImage":{"url":"/assets/covers/nodejs.jpg"},"coverImage":"/assets/covers/nodejs.jpg"}},"__N_SSG":true}
{"pageProps":{"post":{"title":"Github","slug":"github","content":"<h1>Github</h1>\n<ul>\n<li>... add notes on what it is</li>\n</ul>\n<h2>Setting up multiple SSH keys</h2>\n<ul>\n<li>If you have 2+ Github accounts you will have to create a new SSH key for each account</li>\n</ul>\n<ol>\n<li>Create an SSH Key</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Create an rsa key</span>\n$ ssh-keygen -t rsa -C <span class=\"token string\">\"your@email.com\"</span>\n<span class=\"token comment\"># id_rsa_*</span>\n\n<span class=\"token comment\"># Add your SSH private key to the ssh-agent and store your passphrase in the keychain. </span>\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-add ~/.ssh/id_rsa_second-gh\n\n<span class=\"token comment\"># List all the registers keys</span>\n$ ssh-add -l\n</code></pre></div>\n<ol start=\"2\">\n<li>Update your <code>~/.ssh/config</code> file</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\">#first-gh account</span>\nHost github.com\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa\n\n<span class=\"token comment\">#second-gh account</span>\nHost github.com-2\n  HostName github.com\n  IdentityFile ~/.ssh/id_rsa_second-gh\n</code></pre></div>\n<ol start=\"2\">\n<li>Add your public SSH key to github</li>\n</ol>\n<ul>\n<li>Click on your avatar in the top right of the page then click on \"SSH keys &#x26; GPG keys\" in the sidebar</li>\n<li>or click the <a href=\"https://github.com/settings/keys\">SSH keys &#x26; GPG keys link</a></li>\n<li>click the \"New\" button under the SSH Keys section</li>\n<li>copy your *.pub key and paste it</li>\n</ul>\n<ol start=\"3\">\n<li>Test your connections</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># test your connection</span>\n$ <span class=\"token function\">ssh</span> -T git@github.com\n<span class=\"token comment\"># Hi first-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n\n$ <span class=\"token function\">ssh</span> -T git@github.com-2\n<span class=\"token comment\"># Hi second-gh! You've successfully authenticated, but GitHub does not provide shell access.</span>\n</code></pre></div>\n<ol start=\"3\">\n<li>Clone a repo</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Cloning from 1st account</span>\n$ git@github.com:first-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Cloning for 2nd account </span>\n$ git@github.com-2:second-gh/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n\n<span class=\"token comment\"># Update username/email</span>\n$ <span class=\"token function\">git</span> config user.name <span class=\"token string\">\"username\"</span>\n$ <span class=\"token function\">git</span> config user.email <span class=\"token string\">\"your@email.com\"</span> \n\n<span class=\"token comment\"># update the second remote origin</span>\n$ <span class=\"token function\">git</span> remote set-url origin git@github.com-2:username/<span class=\"token operator\">&#x3C;</span>REPO_NAME<span class=\"token operator\">></span>.git\n</code></pre></div>\n<h2>Github Pages</h2>\n<ul>\n<li>You can build a static site and have it hosted on GitHub Pages with a few configurations to the codebase and the github repository’s settings.</li>\n<li>This example expects that you are using npm for your development/deployment</li>\n</ul>\n<ol>\n<li>Create a new repo in Github</li>\n</ol>\n<ul>\n<li>Make sure that it's a <code>Public</code> repo</li>\n</ul>\n<ol start=\"2\">\n<li>Install the <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a> npm package</li>\n</ol>\n<ul>\n<li>Install gh-pages:\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm install gh-pages --save-dev</code></pre></div>\n</li>\n<li>Add a build/deploy script to your <code>package.json</code>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"some-build-script\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"predeploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"rm -rf ./public\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run build &#x26;&#x26; gh-pages -d public\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>The <code>-d public</code> you're telling <code>gh-pages</code> where the build source code lives</li>\n<li>When you run npm run deploy all contents of the <code>public</code> folder will be moved to your repository’s gh-pages branch.</li>\n<li><strong>note</strong>: <em>With npm scripts if you prefix the scripts key name with <code>pre</code> it will run before the command and <code>post</code> it will run after</em></li>\n</ul>\n<ol start=\"3\">\n<li>Update setting for GithubPages</li>\n</ol>\n<ul>\n<li>You must select which branch will be deployed from your repository settings in GitHub for GitHub Pages to function.</li>\n<li>The nice thing about the <code>gh-pages</code> npm package is that it will create a <code>gh-pages</code> branch and wire it up for you</li>\n<li>Navigate to your repo then click [<code>Settings</code> > Scroll down to the <code>GitHub Pages</code> Section]\n<img src=\"/assets/blog/gh-pages-screenshot.png\" alt=\"\"></li>\n<li>It's ok to keep the path as <code>/ (root)</code> because the when you run <code>gh-pages -d public</code> it take the contents of the <code>public</code> folder and saves it to the root of the <code>gh-pages</code> branch</li>\n</ul>\n<h2>Publishing to GitHub Pages</h2>\n<ul>\n<li>All you need to do to publish to githubpages is to run the npm <code>deploy</code> script\n<div class=\"remark-highlight\"><pre class=\"language-sh\"><code class=\"language-sh\">$ npm run deploy</code></pre></div>\n</li>\n<li>Your static page should live: https://<code>&#x3C;GITHUB_USERNAME></code>.github.io/<code>&#x3C;REPO_NAME></code>/.</li>\n<li><em>You might have to clear your cache to see the new changes</em></li>\n</ul>\n<h2>Publish with Github Actions</h2>\n<ol>\n<li>create a personal access token</li>\n</ol>\n<ul>\n<li>click the avatar > profile > <code>Developer setttings</code> > <code>Personal access token</code> or https://github.com/settings/tokens</li>\n<li>note: <code>&#x3C;repo_name> for github actions</code></li>\n<li>check the <code>repo</code> section</li>\n<li><strong>DON'T FORGET TO COPY THE TOKEN</strong></li>\n</ul>\n<ol start=\"2\">\n<li>In your repo settings paste the <code>ACCESS_TOKEN</code></li>\n</ol>\n<ul>\n<li></li>\n</ul>\n<h2>PR Templates</h2>\n<ul>\n<li>All you have to do is create a file <code>.github/pull_request_template.md</code>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\"># &#x26;lt;SOME TITLE&#x26;gt;\n\n## Summary\n\n\n## Notes\n\n\n## Figma Design\n[Figma Design](&#x26;lt;FIGMA_URL&#x26;gt;)\n\n\n## Screenshot\n\n\n## Jira Issue\n[CX-###](&#x26;lt;JIRA-TICKET-URL&#x26;gt;)\n\n\n## Tested\n\n</code></pre></div>\n</li>\n<li>Push it up to github</li>\n</ul>\n","ogImage":{"url":"/assets/blog/hello-world/cover.jpg"},"coverImage":"/assets/blog/hello-world/cover.jpg"}},"__N_SSG":true}
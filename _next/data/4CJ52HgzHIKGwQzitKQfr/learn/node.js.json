{"pageProps":{"post":{"title":"node.js","slug":"node.js","content":"<h1>What is Nodejs</h1>\n<h1>Installation</h1>\n<ul>\n<li>There are a few ways to install Nodejs on your machine</li>\n<li>There are 2 main versions to consider <code>LTS</code> and <code>Current</code></li>\n<li><code>LTS</code> is for Long Term Support which is the stable version as for the <code>Current</code> is the more cutting edge</li>\n<li>Nodejs even versions are stable and odd versions for the lastest versions</li>\n<li>More about release dates and versions <a href=\"https://nodejs.org/en/about/releases/\">go here</a></li>\n</ul>\n<ol>\n<li>Install from the <a href=\"https://nodejs.org/en/\">nodejs</a> homepage</li>\n<li>HomeBrew on your mac</li>\n<li><a href=\"https://github.com/nvm-sh/nvm\">NVM</a> (My prefered way cause you can switch node versions easily)</li>\n</ol>\n<h2>Installing nodejs via Homepage</h2>\n<h2>Installing nodejs via HomeBrew</h2>\n<h2>Install nodejs with nvm</h2>\n<ul>\n<li>\n<p>Install via homebrew</p>\n<ul>\n<li><a href=\"http://dev.topheman.com/install-nvm-with-homebrew-to-use-multiple-versions-of-node-and-iojs-easily/\">tut</a></li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ brew <span class=\"token function\">install</span> nvm\n</code></pre></div>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM installed via homebrew</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> -s <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token builtin class-name\">.</span> <span class=\"token environment constant\">$HOME</span>/.nvm/nvm.sh\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"/.nvm\"</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>brew --prefix nvm<span class=\"token variable\">)</span></span>/nvm.sh\n</code></pre></div>\n</li>\n<li>\n<p>Install via the <a href=\"https://github.com/nvm-sh/nvm\">ruby way</a></p>\n<ul>\n<li>Add this to your bash/zshrc:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># NVM</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NVM_DIR</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.nvm\"</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/nvm.sh\"</span>  <span class=\"token comment\"># This loads nvm</span>\n<span class=\"token punctuation\">[</span> -s <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">\\</span>. <span class=\"token string\">\"<span class=\"token variable\">$NVM_DIR</span>/bash_completion\"</span>  <span class=\"token comment\"># This loads nvm bash_completion</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/local/opt/grep/libexec/gnubin:<span class=\"token environment constant\">$PATH</span>\"</span>\n</code></pre></div>\n</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">undefined</code></pre></div>\n</li>\n<li>\n<p><em>note :</em> every time you switch node versions you'll have to install all your globals again as well as you will have to delete your projects <code>node_modules</code> because these dependencies are specfic to the exact node version &#x26; OS installed</p>\n</li>\n<li>\n<p>If your npm global packages point to a different nodejs version run this</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> list -g --depth<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n$ <span class=\"token function\">npm</span> config <span class=\"token function\">rm</span> prefix\n</code></pre></div>\n</li>\n<li>\n<p>NVM commands</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Check nodejs version</span>\n$ node -v <span class=\"token operator\">||</span> node --version\n\n<span class=\"token comment\"># List installed versions of node (via nvm)</span>\n$ nvm <span class=\"token function\">ls</span>\n\n<span class=\"token comment\"># Install specific version of node</span>\n$ nvm <span class=\"token function\">install</span> <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Set default version of node</span>\n$ nvm <span class=\"token builtin class-name\">alias</span> default <span class=\"token number\">12.20</span>.1\n\n<span class=\"token comment\"># Switch version of node</span>\n$ nvm use <span class=\"token number\">14.15</span>.4\n\n<span class=\"token comment\"># List latest available versions</span>\n$ nvm ls-remote <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -i <span class=\"token string\">'latest'</span>\n</code></pre></div>\n</li>\n</ul>\n<h1>Node tools</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find out-of-day packages</span>\n$ npx npm-upgrade\n\n$ npx depcheck\n\n<span class=\"token comment\"># Find and delete `node_modules` on your machine</span>\n$ npx npkill\n</code></pre></div>\n<h1>Killing your local server that is going rogue</h1>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># Find:</span>\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">lsof</span> -i :3000\n\n<span class=\"token comment\"># Kill:</span>\n$ <span class=\"token function\">kill</span> -9 <span class=\"token operator\">&#x3C;</span>PID<span class=\"token operator\">></span>\n</code></pre></div>\n<h1>Creating a npm package</h1>\n<p>https://dev.to/joshaguilar/fully-automating-npm-package-releases-3k7ez</p>\n<ul>\n<li>sematic versioning\n<BREAKING>.<FEATURE>.<FIX>\n<MAJOR>.<MINOR>.<PATCH></li>\n</ul>\n<h2>For Every release</h2>\n<ol>\n<li>Run tests (if there are any)</li>\n<li>Update version in package.json according to Semver</li>\n<li>Create a git tag according to Semver\nMAJOR.MINOR.PATCH\n<code>$ git tag -a v#.#.# -m #.#.#</code></li>\n<li>Push the package to Github</li>\n<li>Push the package to npm</li>\n<li>Create release notes for every update</li>\n</ol>\n","ogImage":{"url":"/assets/covers/nodejs.jpg"},"coverImage":"/assets/covers/nodejs.jpg"}},"__N_SSG":true}
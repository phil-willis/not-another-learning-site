{"pageProps":{"post":{"title":"Nextjs","slug":"nextjs","content":"<h2>Nextjs - why?</h2>\n<ol>\n<li>Lambda (serverless) functions</li>\n</ol>\n<ul>\n<li>These are functions that reside under the /api route of a Next.js app</li>\n<li>server-side rendered React applications</li>\n<li>These are routes that require fetching initial props from somewhere (using <code>getInitialProps</code> or <code>getServerSideProps</code>)</li>\n</ul>\n<ol start=\"2\">\n<li>Static HTML</li>\n</ol>\n<ul>\n<li>no dynamic content and the data is always the same</li>\n</ul>\n<ol start=\"3\">\n<li>Static Site Generation (SSG)</li>\n</ol>\n<ul>\n<li>Allow static site generation as one of the build options</li>\n<li>These pages use the <code>getStaticProps</code> method to fetch the data that will be used to generate static HTML files, as well as <code>getStaticPaths</code> to get a list of all the subroutes that need to be generated as HTML files</li>\n</ul>\n<ol start=\"4\">\n<li>Incremental Static Regeneration (ISR)</li>\n</ol>\n<ul>\n<li>It combines the benefits of server-side rendered pages and SSG by generating static HTML files on runtime.</li>\n</ul>\n<h2>Creating and Deploying a Static Site to GitHub Pages</h2>\n<ol>\n<li>Create a static build</li>\n</ol>\n<ul>\n<li>Add the build script to your package.json file\n<div class=\"remark-highlight\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build &#x26;&#x26; next export\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>Build the static site:\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">npm</span> run build\n</code></pre></div>\n</li>\n<li>This will create a directory called out which contains a fully static version of your website.</li>\n</ul>\n<ol start=\"2\">\n<li>Create a new repo and push your code up</li>\n</ol>\n<ul>\n<li><strong>Create a Github repo that contains your Github username and .github.io.</strong></li>\n<li>For example my GitHub username is <code>phil-willis</code> and my repo name is <code>phil-willis.github.io</code></li>\n</ul>\n<ol start=\"3\">\n<li>Create a personal access token</li>\n</ol>\n<ul>\n<li>Click the avatar > profile > <code>Developer setttings</code> > <code>Personal access token</code> or <a href=\"https://github.com/settings/tokens\">click here</a>\n<img src=\"/assets/blog/github/gh-profile-settings.png\" alt=\"gh-profile-settings\">\n<img src=\"/assets/blog/github/gh-personal-access-token.png\" alt=\"gh-personal-access-token\">\n<img src=\"/assets/blog/github/gh-personal-access-token-scopes.png\" alt=\"gh-personal-access-token-scopes\"></li>\n<li>note: <code>&#x3C;repo_name> for github actions</code></li>\n<li>check the <code>repo</code> section</li>\n<li><strong>DON'T FORGET TO COPY THE TOKEN</strong></li>\n</ul>\n<ol start=\"4\">\n<li>\n<p>In your repo's settings paste the <code>ACCESS_TOKEN</code>\n<img src=\"/assets/blog/github/gh-secrets.png\" alt=\"gh-secrets\"></p>\n</li>\n<li>\n<p>Create a Github workflow file</p>\n</li>\n</ol>\n<ul>\n<li>Create a directory called .github/workflows and inside that directory, create a YAML file with the following contents:</li>\n</ul>\n<div class=\"remark-highlight\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout üõéÔ∏è\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2.3.1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">persist-credentials</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache üíæ\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> github.workspace <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>/.next/cache\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> runner.os <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>nextjs<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> hashFiles('<span class=\"token important\">**/package-lock.json')</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install and Build\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v1\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm ci\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run export\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">CI</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> touch out/.nojekyll\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy üöÄ\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> JamesIves/github<span class=\"token punctuation\">-</span>pages<span class=\"token punctuation\">-</span>deploy<span class=\"token punctuation\">-</span>action@3.7.1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ACCESS_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.ACCESS_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages \n          <span class=\"token key atrule\">FOLDER</span><span class=\"token punctuation\">:</span> out\n          <span class=\"token key atrule\">CLEAN</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n</code></pre></div>\n<ul>\n<li>Now every push to the <code>main</code> branch will build a static version of our site using the <code>$ npm run build</code> script.</li>\n<li>Using an action called Deploy to GitHub Actions, it will use your token to create and push a clean commit to the <code>gh-pages</code> repo from the <code>./out</code> directory that got generated. If the branch doesn't exist, it will create it.</li>\n<li>GitHub Pages uses Jekyll under the hood to host and render static sites. However, Jekyll ignores every directory that starts with an underscore character.</li>\n<li>This will be a problem because Next.js generates the static assets (CSS and JavaScript) inside of a directory called _next and there's no way to changes</li>\n<li>To get around this issue, you need to create an empty file called <code>.nojekyll</code> inside of your <code>gh-pages</code> branch.</li>\n</ul>\n<ol start=\"6\">\n<li>Make a commit and push to github!</li>\n</ol>\n","ogImage":{"url":"/assets/covers/nextjs.jpg"},"coverImage":"/assets/covers/nextjs.jpg"}},"__N_SSG":true}